{"version":3,"sources":["assets/glb/room.glb","scCamera.js","Surface.js","Test.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SCCamera","Object","classCallCheck","this","camera","PerspectiveCamera","window","innerWidth","innerHeight","defaultPosition","Vector3","defaultRotation","Euler","Math","PI","position","copy","rotation","transition","surface","up","mesh","fov","_Math","degToRad","dist","height","tan","worldPosition","getWorldPosition","targetPosition","getWorldDirection","multiplyScalar","add","startPosition","clone","startRotation","lookAt","targetRotation","goToOverview","_this","Tween","easing","Easing","Cubic","Out","to","x","y","z","start","startQuaternion","Quaternion","setFromEuler","endQuaternion","q","t","on","_ref","slerp","quaternion","material","MeshBasicMaterial","opacity","color","side","DoubleSide","blending","NoBlending","Surface","width","Component","cameraView","setCameraView","element","document","createElement","style","concat","object","CSS3DObject","geometry","PlaneBufferGeometry","Mesh","castShadow","receiveShadow","render","glScene","cssScene","react_default","a","Test","props","cameraViewIsHere","cameraViewIsOverview","className","onClick","alert","App","possibleConstructorReturn","getPrototypeOf","call","state","appContent","createRef","surfaces","scCamera","bind","assertThisInitialized","setState","_this2","THREE","bgScene","emissive","specular","flatShading","shininess","cube","load","roomGLB","gltf","scene","scale","pointLight","set","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","bgRenderer","alpha","setClearColor","setPixelRatio","devicePixelRatio","setSize","domElement","top","left","current","appendChild","cssRenderer","glRenderer","pointerEvents","animate","time","requestAnimationFrame","update","prevProps","prevState","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","goToSurface","nextProps","nextState","_this3","ref","xmlns","viewBox","d","Boolean","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c498552e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/room.876c2022.glb\";","import { PerspectiveCamera, Vector3, Euler, _Math, Quaternion } from 'three-full';\r\nimport { Tween, Easing } from 'es6-tween';\r\n\r\nexport default class SCCamera {\r\n  constructor() {\r\n    this.camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 5000);\r\n\r\n    this.defaultPosition = new Vector3(0, 0, -1800);\r\n    this.defaultRotation = new Euler(0, Math.PI, 0);\r\n\r\n    this.camera.position.copy(this.defaultPosition);\r\n    this.camera.rotation.copy(this.defaultRotation);\r\n  }\r\n\r\n  goToOverview() {\r\n    this.transition(this.defaultPosition, this.defaultRotation);\r\n  }\r\n\r\n  goToSurface(surface) {\r\n    if (surface === null) {\r\n      this.goToOverview();\r\n      return;\r\n    }\r\n\r\n    this.camera.up.copy(surface.mesh.up);\r\n\r\n    const fov = _Math.degToRad(this.camera.fov);\r\n    const dist = (surface.height + 100) / (2 * Math.tan(fov / 2));\r\n\r\n    const worldPosition = new Vector3();\r\n    surface.mesh.getWorldPosition(worldPosition);\r\n\r\n    const targetPosition = new Vector3();\r\n    surface.mesh.getWorldDirection(targetPosition);\r\n    targetPosition.multiplyScalar(dist);\r\n    targetPosition.add(worldPosition);\r\n\r\n    const startPosition = this.camera.position.clone();\r\n    const startRotation = this.camera.rotation.clone();\r\n\r\n    this.camera.position.copy(targetPosition);\r\n    this.camera.lookAt(worldPosition);\r\n    const targetRotation = this.camera.rotation.clone();\r\n\r\n    this.camera.position.copy(startPosition);\r\n    this.camera.rotation.copy(startRotation);\r\n\r\n    this.transition(targetPosition, targetRotation)\r\n  }\r\n\r\n  transition(targetPosition, targetRotation) {\r\n    // TWEEN\r\n    const duration = 800;\r\n\r\n    new Tween(this.camera.position).easing(Easing.Cubic.Out).to({\r\n      x: targetPosition.x,\r\n      y: targetPosition.y,\r\n      z: targetPosition.z\r\n    }, duration).start();\r\n\r\n    // NOTE: there's also nlerp (for performance maybe?)\r\n    // http://number-none.com/product/Understanding%20Slerp,%20Then%20Not%20Using%20It/\r\n    const startQuaternion = new Quaternion();\r\n    startQuaternion.setFromEuler(this.camera.rotation);\r\n    const endQuaternion = new Quaternion();\r\n    endQuaternion.setFromEuler(targetRotation);\r\n    let q = new Quaternion();\r\n    new Tween({t: 0}).to({t: 1}, duration).easing(Easing.Cubic.Out).on('update', ({t}) =>{\r\n      Quaternion.slerp(startQuaternion, endQuaternion, q, t);\r\n      this.camera.quaternion.copy(q);\r\n    }).start();\r\n  }\r\n}","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { MeshBasicMaterial, DoubleSide, CSS3DObject, PlaneBufferGeometry, Mesh, NoBlending } from 'three-full';\r\n\r\nconst material = new MeshBasicMaterial({\r\n  opacity: 0,\r\n  color: 0x000000,\r\n  side: DoubleSide,\r\n  blending: NoBlending\r\n});\r\n\r\nexport default class Surface {\r\n  constructor(width, height, position, rotation, up, Component, cameraView, setCameraView) {\r\n    this.width = width;\r\n    this.height = height;\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.style.width = `${width}px`;\r\n    this.element.style.height = `${height}px`;\r\n    this.element.style.opacity = 1;\r\n\r\n    this.object = new CSS3DObject(this.element);\r\n    this.object.position.copy(position);\r\n    this.object.rotation.copy(rotation);\r\n\r\n    this.Component = Component;\r\n    this.cameraView = cameraView;\r\n    this.setCameraView = setCameraView;\r\n\r\n    this.geometry = new PlaneBufferGeometry(width, height);\r\n    this.mesh = new Mesh(this.geometry, material);\r\n    this.mesh.position.copy(position);\r\n    this.mesh.rotation.copy(rotation);\r\n    this.mesh.up = up;\r\n    this.mesh.castShadow = false;\r\n    this.mesh.receiveShadow = true;\r\n  }\r\n\r\n  update(cameraView) {\r\n    this.cameraView = cameraView;\r\n    this.render();\r\n  }\r\n\r\n  load(glScene, cssScene) {\r\n    glScene.add(this.mesh);\r\n    cssScene.add(this.object);\r\n  }\r\n\r\n  render() {\r\n    if (this.Component !== null)\r\n      render(<this.Component cameraView={this.cameraView} setCameraView={this.setCameraView} surface={this} />, this.element);\r\n  }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Test.css';\r\n\r\nfunction Test(props) {\r\n  const cameraViewIsHere = props.cameraView === props.surface;\r\n  const cameraViewIsOverview = props.cameraView === null;\r\n\r\n  return (\r\n    <div className=\"test\">\r\n      <div className={`test__content ${!cameraViewIsHere ? 'test__content--no-pointer' : ''}`}>\r\n        <h1>Hello World</h1>\r\n        {cameraViewIsHere &&\r\n          <h3>Camera is here</h3>\r\n        }\r\n        <button onClick={() => alert(\"Hello World\")}>Click me</button>\r\n      </div>\r\n      <div\r\n        className={`test__overlay ${!cameraViewIsOverview ? 'test__overlay--hidden' : ''}`}\r\n        onClick={() => props.setCameraView(props.surface)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nTest.propTypes = {\r\n  cameraView: PropTypes.object,\r\n  setCameraView: PropTypes.func.isRequired,\r\n  surface: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Test;\r\n","import React, { Component, createRef } from 'react';\nimport * as THREE from 'three-full';\nimport TWEEN, { update } from 'es6-tween';\nimport SCCamera from './scCamera.js';\nimport Surface from './Surface';\nimport Test from './Test.jsx';\nimport roomGLB from './assets/glb/room.glb';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cameraView: null\n    };\n\n    this.appContent = createRef();\n    this.surfaces = [];\n    this.scCamera = new SCCamera();\n    this.setCameraView = this.setCameraView.bind(this);\n  }\n\n  setCameraView(cameraView) {\n    this.setState({cameraView});\n  }\n\n  componentDidMount() {\n    //new THREE.OrbitControls(scCamera.camera);\n\n    const glScene = new THREE.Scene();\n    const bgScene = new THREE.Scene();\n    const cssScene = new THREE.Scene();\n    \n    // cube\n    const geometry = new THREE.BoxGeometry(200, 200, 200);\n    const material = new THREE.MeshPhongMaterial({\n      color: 0xff0000,\n      emissive: 0x000000,\n      specular: 0x111111,\n      side: THREE.DoubleSide,\n      flatShading: false,\n      shininess: 30,\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    cube.position.z = -250;\n    cube.position.x = 250;\n    cube.position.y = 250;\n    cube.castShadow = true;\n    cube.receiveShadow = false;\n    glScene.add(cube);\n\n    var loader = new THREE.GLTFLoader();\n    loader.load(roomGLB, function (gltf) {\n      gltf.scene.scale.multiplyScalar(100);\n      gltf.scene.rotation.y = Math.PI;\n      gltf.scene.position.y = -500;\n      gltf.scene.position.z = -500;\n      gltf.scene.receiveShadow = true;\n      bgScene.add(gltf.scene);\n    });\n\n    // light\n    const pointLight = new THREE.PointLight(0xffffff, 0.8, 0, 2);\n    pointLight.castShadow = true;\n    pointLight.position.z = -1000;\n    glScene.add(pointLight);\n    bgScene.add(new THREE.PointLight().copy(pointLight));\n    //const sphereSize = 100;\n    //const pointLightHelper = new THREE.PointLightHelper( pointLight, sphereSize );\n    //glScene.add( pointLightHelper );\n\n    this.surfaces = [\n      new Surface(1000, 1000, new THREE.Vector3(500, 0, -500), new THREE.Euler(0, -Math.PI / 2, 0), new THREE.Vector3(0, 1, 0), Test, this.state.cameraView, this.setCameraView),\n      new Surface(1000, 1000, new THREE.Vector3(0, 0, 0), new THREE.Euler(0, Math.PI, 0), new THREE.Vector3(0, 1, 0), Test, this.state.cameraView, this.setCameraView),\n      new Surface(1000, 1000, new THREE.Vector3(-500, 0, -500), new THREE.Euler(0, Math.PI / 2, 0), new THREE.Vector3(0, 1, 0), Test, this.state.cameraView, this.setCameraView),\n      new Surface(1000, 1000, new THREE.Vector3(0, -500, -500), new THREE.Euler(Math.PI / 2, Math.PI, 0), new THREE.Vector3(0, 0, 1), Test, this.state.cameraView, this.setCameraView)\n    ];\n    this.surfaces[3].mesh.up.set(0, 0, 1);\n    for (const surface of this.surfaces) {\n      surface.load(glScene, cssScene);\n      surface.render();\n    }\n\n    const bgRenderer = new THREE.WebGLRenderer({ alpha: true });\n    bgRenderer.setClearColor(0x000000, 0);\n    bgRenderer.setPixelRatio(window.devicePixelRatio);\n    bgRenderer.setSize(window.innerWidth, window.innerHeight);\n    bgRenderer.domElement.style.position = 'absolute';\n    bgRenderer.domElement.style.top = 0;\n    bgRenderer.domElement.style.left = 0;\n    this.appContent.current.appendChild(bgRenderer.domElement);\n\n    const cssRenderer = new THREE.CSS3DRenderer();\n    cssRenderer.setSize(window.innerWidth, window.innerHeight);\n    cssRenderer.domElement.style.position = 'absolute';\n    cssRenderer.domElement.style.top = 0;\n    cssRenderer.domElement.style.left = 0;\n    this.appContent.current.appendChild(cssRenderer.domElement);\n\n    const glRenderer = new THREE.WebGLRenderer({ alpha: true });\n    glRenderer.setClearColor(0x000000, 0);\n    glRenderer.setPixelRatio(window.devicePixelRatio);\n    glRenderer.setSize(window.innerWidth, window.innerHeight);\n    glRenderer.domElement.style.position = 'absolute';\n    glRenderer.domElement.style.top = 0;\n    glRenderer.domElement.style.left = 0;\n    glRenderer.domElement.style.pointerEvents = 'none';\n    this.appContent.current.appendChild(glRenderer.domElement);\n\n    const animate = (time) => {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      bgRenderer.render(bgScene, this.scCamera.camera);\n      cssRenderer.render(cssScene, this.scCamera.camera);\n      glRenderer.render(glScene, this.scCamera.camera);\n      update(time);\n    };\n\n    animate();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.cameraView === this.state.cameraView) return;\n\n    for (const surface of this.surfaces) {\n      surface.update(this.state.cameraView);\n    }\n    this.scCamera.goToSurface(this.state.cameraView);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (nextState.cameraView !== this.state.cameraView) return true;\n    return false;\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"app__content\" ref={this.appContent} />\n        <div className=\"app__overlay\">\n          {this.state.cameraView !== null &&\n            <div className=\"app__back-to-overlay\" onClick={() => this.setState({cameraView: null})}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"6 6 36 36\">\n                  <path d=\"M40 22h-24.34l11.17-11.17-2.83-2.83-16 16 16 16 2.83-2.83-11.17-11.17h24.34v-4z\"/>\n              </svg>\n              <div>\n                <span>Back to overview</span>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}