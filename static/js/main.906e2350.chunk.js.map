{"version":3,"sources":["assets/glb/room.glb","scCamera.js","render.js","Surface/SurfaceData.js","Surface/index.jsx","Surface/withMainSurface.js","Test.jsx","Surface/useGetAnchorData.js","Surface/AnchoredSurface.jsx","Surface/withSubSurface.js","Board/Pamphlet.jsx","Board/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SCCamera","Object","classCallCheck","this","camera","PerspectiveCamera","window","innerWidth","innerHeight","defaultPosition","Vector3","defaultRotation","Euler","Math","PI","position","copy","rotation","transitionInfo","targetPosition","targetRotation","positionTween","rotationTween","transition","surface","up","mesh","fov","_Math","degToRad","q","dist","height","tan","worldPosition","getWorldPosition","getWorldDirection","multiplyScalar","add","startPosition","clone","startRotation","lookAt","goToOverview","_this","Tween","easing","Easing","Cubic","Out","to","x","y","z","start","startQuaternion","Quaternion","setFromEuler","endQuaternion","t","on","_ref","slerp","quaternion","isPlaying","cameraOriginalPosition","cameraOriginalRotation","isTransitionRunning","scCamera","glScene","Scene","bgScene","cssScene","surfaceDeps","toCamera","geometry","BoxGeometry","material","MeshPhongMaterial","color","emissive","specular","side","DoubleSide","flatShading","shininess","cube","Mesh","cubeShadow","castShadow","transparent","opacity","GLTFLoader","load","roomGLB","gltf","scene","scale","children","receiveShadow","pointLight","PointLight","shadow","mapSize","width","near","far","bgRenderer","WebGLRenderer","alpha","setClearColor","setPixelRatio","devicePixelRatio","setSize","domElement","style","top","left","shadowMap","enabled","document","getElementById","appendChild","cssRenderer","CSS3DRenderer","glRenderer","pointerEvents","onResize","debounce","aspect","updateProjectionMatrix","addEventListener","animate","time","requestAnimationFrame","render","update","MeshBasicMaterial","blending","NoBlending","SurfaceData","initialize","apply","arguments","_ref$scaleFactor","isClickable","scaleFactor","_ref$parent","parent","originalPosition","originalRotation","originalUp","atOriginalPosition","element","createElement","concat","object","CSS3DObject","set","PlaneBufferGeometry","_this$toCamera","_this$toCamera2","slicedToArray","manhattanDistanceTo","Number","EPSILON","moveTransition","moveToCamera","moveToOriginal","_this2","_ref2","Surface","props","possibleConstructorReturn","getPrototypeOf","call","surfaceData","createPortal","react_default","a","className","fontSize","cloneElement","Component","withMainSurface","isCameraHere","cameraView","isCameraOverview","react","onClick","setCameraView","_useState","useState","_useState2","test","setTest","buttonRef","useRef","ref","useGetAnchorData","anchorRef","anchorData","setAnchorData","useLayoutEffect","vertices","getAttribute","topLeft","localToWorld","getX","getY","getZ","origin","rightDirection","subVectors","downDirection","outDirection","normalize","anchorOffset","offset","offsetParent","offsetParentOffset","offsetLeft","offsetTop","current","offsetWidth","offsetHeight","addScaledVector","AnchoredSurface","src_Surface","assign","isCameraParent","withSubSurface","useEffect","moveToggle","Surface_AnchoredSurface","Board_Pamphlet","leftWallProps","objectSpread","backWallProps","rightWallProps","floorProps","Embedded","class","id","Helmet","type","src","App","goToSurface","src_Board","src_Test","xmlns","viewBox","d","Boolean","location","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.906e2350.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/room.876c2022.glb\";","import { PerspectiveCamera, Vector3, Euler, _Math, Quaternion } from 'three-full';\r\nimport { Tween, Easing } from 'es6-tween';\r\n\r\nexport default class SCCamera {\r\n  constructor() {\r\n    this.camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 5000);\r\n\r\n    this.defaultPosition = new Vector3(0, 0, -1800);\r\n    this.defaultRotation = new Euler(0, Math.PI, 0);\r\n\r\n    this.camera.position.copy(this.defaultPosition);\r\n    this.camera.rotation.copy(this.defaultRotation);\r\n\r\n    this.transitionInfo = {\r\n      targetPosition: null,\r\n      targetRotation: null,\r\n    };\r\n\r\n    this.positionTween = null;\r\n    this.rotationTween = null;\r\n  }\r\n\r\n  goToOverview() {\r\n    this.transition(this.defaultPosition, this.defaultRotation);\r\n  }\r\n\r\n  goToSurface(surface) {\r\n    if (surface === null) {\r\n      this.goToOverview();\r\n      return;\r\n    }\r\n\r\n    this.camera.up.copy(surface.mesh.up);\r\n\r\n    // padding is empty space in pixels (on screen) above and below the surface\r\n    const padding = 100;\r\n    const fov = _Math.degToRad(this.camera.fov);\r\n    const q = 2 * padding / window.innerHeight;\r\n    const dist = (surface.height / (1 - q)) / (2 * Math.tan(fov / 2));\r\n\r\n    const worldPosition = new Vector3();\r\n    surface.mesh.getWorldPosition(worldPosition);\r\n\r\n    const targetPosition = new Vector3();\r\n    surface.mesh.getWorldDirection(targetPosition);\r\n    targetPosition.multiplyScalar(dist);\r\n    targetPosition.add(worldPosition);\r\n\r\n    const startPosition = this.camera.position.clone();\r\n    const startRotation = this.camera.rotation.clone();\r\n\r\n    this.camera.position.copy(targetPosition);\r\n    this.camera.lookAt(worldPosition);\r\n    const targetRotation = this.camera.rotation.clone();\r\n\r\n    this.camera.position.copy(startPosition);\r\n    this.camera.rotation.copy(startRotation);\r\n\r\n    this.transition(targetPosition, targetRotation)\r\n  }\r\n\r\n  transition(targetPosition, targetRotation) {\r\n    this.transitionInfo = {\r\n      targetPosition,\r\n      targetRotation\r\n    };\r\n\r\n    // TWEEN\r\n    const duration = 800;\r\n\r\n    this.positionTween = new Tween(this.camera.position).easing(Easing.Cubic.Out).to({\r\n      x: targetPosition.x,\r\n      y: targetPosition.y,\r\n      z: targetPosition.z\r\n    }, duration).start();\r\n\r\n    // NOTE: there's also nlerp (for performance maybe?)\r\n    // http://number-none.com/product/Understanding%20Slerp,%20Then%20Not%20Using%20It/\r\n    const startQuaternion = new Quaternion();\r\n    startQuaternion.setFromEuler(this.camera.rotation);\r\n    const endQuaternion = new Quaternion();\r\n    endQuaternion.setFromEuler(targetRotation);\r\n    let q = new Quaternion();\r\n    this.rotationTween = new Tween({t: 0}).to({t: 1}, duration).easing(Easing.Cubic.Out).on('update', ({t}) =>{\r\n      Quaternion.slerp(startQuaternion, endQuaternion, q, t);\r\n      this.camera.quaternion.copy(q);\r\n    }).start();\r\n  }\r\n\r\n  isTransitionRunning() {\r\n    if (this.positionTween === null || this.rotationTween === null) return false;\r\n    return this.positionTween.isPlaying() || this.rotationTween.isPlaying();\r\n  }\r\n\r\n  // returns [position, rotation]\r\n  toCamera(surface) {\r\n    const cameraOriginalPosition = this.camera.position.clone();\r\n    const cameraOriginalRotation = this.camera.rotation.clone();\r\n    let transition = this.isTransitionRunning(); // In the TINY chance that running changes while this function is running, store its value here and use that instead.\r\n    if (transition) {\r\n      this.camera.position.copy(this.transitionInfo.targetPosition);\r\n      this.camera.rotation.copy(this.transitionInfo.targetRotation);\r\n    }\r\n\r\n    // padding is empty space in pixels (on screen) above and below the surface\r\n    const padding = 80;\r\n    const fov = _Math.degToRad(this.camera.fov);\r\n    const q = 2 * padding / window.innerHeight;\r\n    const dist = (surface.height / (1 - q)) / (2 * Math.tan(fov / 2));\r\n\r\n    const worldPosition = new Vector3();\r\n    this.camera.getWorldPosition(worldPosition);\r\n\r\n    const targetPosition = new Vector3();\r\n    this.camera.getWorldDirection(targetPosition);\r\n    targetPosition.multiplyScalar(dist);\r\n    targetPosition.add(worldPosition);\r\n\r\n    const startPosition = surface.mesh.position.clone();\r\n    const startRotation = surface.mesh.rotation.clone();\r\n\r\n    surface.mesh.position.copy(targetPosition);\r\n    surface.mesh.lookAt(worldPosition);\r\n    const targetRotation = surface.mesh.rotation.clone();\r\n\r\n    surface.mesh.position.copy(startPosition);\r\n    surface.mesh.rotation.copy(startRotation);\r\n\r\n    if (transition) {\r\n      this.camera.position.copy(cameraOriginalPosition);\r\n      this.camera.rotation.copy(cameraOriginalRotation);\r\n    }\r\n    return [targetPosition, targetRotation];\r\n  }\r\n}","import { Scene, DoubleSide, BoxGeometry, MeshPhongMaterial, Mesh, GLTFLoader, PointLight, WebGLRenderer, CSS3DRenderer } from 'three-full';\r\nimport debounce from 'lodash.debounce';\r\nimport { update } from 'es6-tween';\r\nimport SCCamera from './scCamera.js';\r\nimport roomGLB from './assets/glb/room.glb';\r\n\r\nexport const scCamera = new SCCamera();\r\nconst glScene = new Scene();\r\nconst bgScene = new Scene();\r\nconst cssScene = new Scene();\r\nexport const surfaceDeps = { glScene, cssScene, toCamera: (surface) => scCamera.toCamera(surface) };\r\n\r\n// cube\r\nconst geometry = new BoxGeometry(200, 200, 200);\r\nconst material = new MeshPhongMaterial({\r\n  color: 0xff0000,\r\n  emissive: 0x000000,\r\n  specular: 0x111111,\r\n  side: DoubleSide,\r\n  flatShading: false,\r\n  shininess: 30\r\n});\r\nconst cube = new Mesh(geometry, material);\r\ncube.position.z = -250;\r\ncube.position.x = 250;\r\ncube.position.y = 250;\r\nglScene.add(cube);\r\n\r\nconst cubeShadow = new Mesh(geometry, material.clone());\r\ncubeShadow.castShadow = true;\r\ncubeShadow.material.transparent = true;\r\ncubeShadow.material.opacity = 0;\r\ncubeShadow.position.copy(cube.position);\r\nbgScene.add(cubeShadow);\r\n\r\nconst loader = new GLTFLoader();\r\nloader.load(roomGLB, function (gltf) {\r\n  gltf.scene.scale.multiplyScalar(100);\r\n  gltf.scene.rotation.y = Math.PI;\r\n  gltf.scene.position.y = -500;\r\n  gltf.scene.position.z = -500;\r\n  gltf.scene.children[0].receiveShadow = true;\r\n  bgScene.add(gltf.scene);\r\n});\r\n\r\n// light\r\nconst pointLight = new PointLight(0xffffff, 0.8, 0, 2);\r\npointLight.castShadow = true;\r\npointLight.position.z = -1000;\r\npointLight.shadow.mapSize.width = 2048;  // default\r\npointLight.shadow.mapSize.height = 2048; // default\r\npointLight.shadow.camera.near = 0.5;       // default\r\npointLight.shadow.camera.far = 5000      // default\r\nglScene.add(pointLight);\r\nbgScene.add(new PointLight().copy(pointLight));\r\n//const sphereSize = 100;\r\n//const pointLightHelper = new PointLightHelper( pointLight, sphereSize );\r\n//glScene.add( pointLightHelper );\r\n\r\n\r\n\r\nconst bgRenderer = new WebGLRenderer({ alpha: true });\r\nbgRenderer.setClearColor(0x000000, 0);\r\nbgRenderer.setPixelRatio(window.devicePixelRatio);\r\nbgRenderer.setSize(window.innerWidth, window.innerHeight);\r\nbgRenderer.domElement.style.position = 'absolute';\r\nbgRenderer.domElement.style.top = 0;\r\nbgRenderer.domElement.style.left = 0;\r\nbgRenderer.shadowMap.enabled = true;\r\ndocument.getElementById('canvas').appendChild(bgRenderer.domElement);\r\n\r\nconst cssRenderer = new CSS3DRenderer();\r\ncssRenderer.setSize(window.innerWidth, window.innerHeight);\r\ncssRenderer.domElement.style.position = 'absolute';\r\ncssRenderer.domElement.style.top = 0;\r\ncssRenderer.domElement.style.left = 0;\r\ndocument.getElementById('canvas').appendChild(cssRenderer.domElement);\r\n\r\nconst glRenderer = new WebGLRenderer({ alpha: true });\r\nglRenderer.setClearColor(0x000000, 0);\r\nglRenderer.setPixelRatio(window.devicePixelRatio);\r\nglRenderer.setSize(window.innerWidth, window.innerHeight);\r\nglRenderer.domElement.style.position = 'absolute';\r\nglRenderer.domElement.style.top = 0;\r\nglRenderer.domElement.style.left = 0;\r\nglRenderer.domElement.style.pointerEvents = 'none';\r\ndocument.getElementById('canvas').appendChild(glRenderer.domElement);\r\n\r\nconst onResize = debounce(() => {\r\n  scCamera.camera.aspect = window.innerWidth / window.innerHeight;\r\n  scCamera.camera.updateProjectionMatrix();\r\n  bgRenderer.setSize(window.innerWidth, window.innerHeight);\r\n  cssRenderer.setSize(window.innerWidth, window.innerHeight);\r\n  glRenderer.setSize(window.innerWidth, window.innerHeight);\r\n}, 100);\r\nwindow.addEventListener('resize', onResize);\r\n\r\nexport const refresh = () => {\r\n  bgRenderer.render(bgScene, scCamera.camera);\r\n  cssRenderer.render(cssScene, scCamera.camera);\r\n  glRenderer.render(glScene, scCamera.camera);\r\n};\r\n\r\nconst animate = (time) => {\r\n  requestAnimationFrame(animate);\r\n  cube.rotation.x += 0.01;\r\n  cubeShadow.rotation.x += 0.01;\r\n  cube.rotation.y += 0.01;\r\n  cubeShadow.rotation.y += 0.01;\r\n  bgRenderer.render(bgScene, scCamera.camera);\r\n  cssRenderer.render(cssScene, scCamera.camera);\r\n  glRenderer.render(glScene, scCamera.camera);\r\n  update(time);\r\n};\r\n\r\nanimate();\r\n","import { MeshBasicMaterial, DoubleSide, CSS3DObject, PlaneBufferGeometry, Mesh, NoBlending, Quaternion } from 'three-full';\r\nimport { Tween, Easing } from 'es6-tween';\r\nimport { refresh } from '../render';\r\nimport './Surface.css';\r\n\r\nconst material = new MeshBasicMaterial({\r\n  opacity: 0,\r\n  color: 0x000000,\r\n  side: DoubleSide,\r\n  blending: NoBlending\r\n});\r\n\r\nexport default class SurfaceData {\r\n  constructor(...args) {\r\n    this.initialize(...args);\r\n  }\r\n\r\n  initialize({ width, height, position, rotation, up, glScene, cssScene, toCamera, isClickable = true, scaleFactor = 1, parent = null }) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.scaleFactor = scaleFactor;\r\n    this.originalPosition = position.clone();\r\n    this.originalRotation = rotation.clone();\r\n    this.originalUp = up;\r\n    this.atOriginalPosition = true;\r\n\r\n    this.parent = parent;\r\n    this.toCamera = () => toCamera(this);\r\n\r\n    this.element = document.createElement('div');\r\n    this.element.style.width = `${width / scaleFactor}px`;\r\n    this.element.style.height = `${height / scaleFactor}px`;\r\n    this.element.style.opacity = 1;\r\n\r\n    this.object = new CSS3DObject(this.element);\r\n    this.object.position.copy(position);\r\n    this.object.rotation.copy(rotation);\r\n    this.object.scale.set(scaleFactor, scaleFactor, scaleFactor);\r\n\r\n    this.geometry = new PlaneBufferGeometry(width, height);\r\n    this.mesh = new Mesh(this.geometry, material);\r\n    this.mesh.position.copy(position);\r\n    this.mesh.rotation.copy(rotation);\r\n    this.mesh.up = up;\r\n    this.mesh.castShadow = false;\r\n    this.mesh.receiveShadow = true;\r\n\r\n    glScene.add(this.mesh);\r\n    cssScene.add(this.object);\r\n    refresh();\r\n    // if we don't refresh here, there's no guarantee the surface exists in the DOM once we start doing stuff with it!\r\n  }\r\n\r\n  moveToCamera() {\r\n    const [position, rotation] = this.toCamera();\r\n    if (this.mesh.position.manhattanDistanceTo(position) < Number.EPSILON) return;\r\n    \r\n    this.moveTransition(position, rotation);\r\n    this.atOriginalPosition = false;\r\n  }\r\n\r\n  moveToOriginal() {\r\n    if (this.mesh.position.manhattanDistanceTo(this.originalPosition) < Number.EPSILON) return;\r\n\r\n    this.moveTransition(this.originalPosition, this.originalRotation);\r\n    this.atOriginalPosition = true;\r\n  }\r\n\r\n  moveToggle() {\r\n    if (this.atOriginalPosition) this.moveToCamera();\r\n    else this.moveToOriginal();\r\n  }\r\n\r\n  moveTransition(targetPosition, targetRotation) {\r\n    // TWEEN\r\n    const duration = 200;\r\n\r\n    new Tween(this.object.position).easing(Easing.Cubic.Out).to({\r\n      x: targetPosition.x,\r\n      y: targetPosition.y,\r\n      z: targetPosition.z\r\n    }, duration).start();\r\n    new Tween(this.mesh.position).easing(Easing.Cubic.Out).to({\r\n      x: targetPosition.x,\r\n      y: targetPosition.y,\r\n      z: targetPosition.z\r\n    }, duration).start();\r\n\r\n    // NOTE: there's also nlerp (for performance maybe?)\r\n    // http://number-none.com/product/Understanding%20Slerp,%20Then%20Not%20Using%20It/\r\n    const startQuaternion = new Quaternion();\r\n    startQuaternion.setFromEuler(this.mesh.rotation);\r\n    const endQuaternion = new Quaternion();\r\n    endQuaternion.setFromEuler(targetRotation);\r\n    let q = new Quaternion();\r\n    new Tween({t: 0}).to({t: 1}, duration).easing(Easing.Cubic.Out).on('update', ({t}) =>{\r\n      Quaternion.slerp(startQuaternion, endQuaternion, q, t);\r\n      this.mesh.quaternion.copy(q);\r\n      this.object.quaternion.copy(q);\r\n    }).start();\r\n  }\r\n}","import React, { Component, cloneElement } from 'react';\r\nimport { Vector3, Euler, Scene } from 'three-full';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport SurfaceData from './SurfaceData';\r\nimport './Surface.css';\r\n\r\n// NOTE: This is a class component instead of a functional component because we can save an update\r\n// by creating surfaceData in the constructor. Otherwise it would be an additional update. Also cleaner code.\r\nclass Surface extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.surfaceData = new SurfaceData(props);\r\n  }\r\n\r\n  render() {\r\n    return createPortal((\r\n      <div className=\"surface\" style={{ fontSize: `${10 / this.surfaceData.scaleFactor}px` }}>\r\n        {cloneElement(this.props.children, { surface: this.surfaceData })}\r\n      </div>\r\n    ), this.surfaceData.element);\r\n  }\r\n}\r\n\r\nSurface.propTypes = {\r\n  width: PropTypes.number.isRequired, \r\n  height: PropTypes.number.isRequired,\r\n  position: PropTypes.instanceOf(Vector3).isRequired,\r\n  rotation: PropTypes.instanceOf(Euler).isRequired,\r\n  up: PropTypes.instanceOf(Vector3).isRequired, \r\n  glScene: PropTypes.instanceOf(Scene).isRequired, \r\n  cssScene: PropTypes.instanceOf(Scene).isRequired, \r\n  toCamera: PropTypes.func.isRequired, \r\n  isClickable: PropTypes.bool, \r\n  scaleFactor: PropTypes.number, \r\n  parent: PropTypes.instanceOf(SurfaceData),\r\n  children: PropTypes.element.isRequired\r\n};\r\n\r\nexport default Surface;","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function withMainSurface(Component) {\r\n  function MainSurface(props) {\r\n    const isCameraHere = props.cameraView === props.surface;\r\n    const isCameraOverview = props.cameraView === null;\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className={`surface__content ${!isCameraHere ? 'surface__content--no-pointer' : ''}`}>\r\n          <Component {...props} />\r\n        </div>\r\n        <div\r\n          className={`surface__overlay ${!isCameraOverview ? 'surface__overlay--hidden' : ''}`}\r\n          onClick={() => props.setCameraView(props.surface)}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  MainSurface.propTypes = {\r\n    cameraView: PropTypes.object,\r\n    setCameraView: PropTypes.func,\r\n    surface: PropTypes.object\r\n  };\r\n\r\n  return MainSurface;\r\n}\r\n","import React, { useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withMainSurface from './Surface/withMainSurface';\r\nimport './Test.css';\r\n\r\nfunction Test(props) {\r\n  const [test, setTest] = useState(0);\r\n  const buttonRef = useRef(null);\r\n\r\n  const isCameraHere = props.cameraView === props.surface;\r\n\r\n  return (\r\n    <div className=\"test\">\r\n      <h1>Hello World</h1>\r\n      <p>{test}</p>\r\n      {isCameraHere &&\r\n        <h3>Camera is here</h3>\r\n      }\r\n      <button onClick={() => setTest(test + 1)} ref={buttonRef}>Click me</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nTest.propTypes = {\r\n  cameraView: PropTypes.object,\r\n  setCameraView: PropTypes.func.isRequired,\r\n  surface: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withMainSurface(Test);\r\n","import { useState, useLayoutEffect } from 'react';\r\nimport { Vector3 } from 'three-full';\r\n\r\n// recursively check offset to determine position (in pixels) of the anchor relative to surface.\r\n// returns null if surface isn't found\r\nfunction offset(element) {\r\n  if (element.offsetParent === null) return { left: 0, top: 0};\r\n  if (element.className === 'surface') return { left: 0, top: 0};\r\n  const offsetParentOffset = offset(element.offsetParent);\r\n  return {\r\n    left: offsetParentOffset.left + element.offsetLeft, \r\n    top: offsetParentOffset.top + element.offsetTop\r\n  };\r\n}\r\n\r\nexport default function useGetAnchorData(surface, anchorRef) {\r\n  const [anchorData, setAnchorData] = useState(null);\r\n\r\n  useLayoutEffect(() => {\r\n    // top-left corner has index := 0\r\n    const vertices = surface.geometry.getAttribute('position');\r\n    const i = 0;\r\n    const topLeft = surface.mesh.localToWorld(new Vector3(vertices.getX(i), vertices.getY(i), vertices.getZ(i)))\r\n\r\n    const origin = new Vector3();\r\n    surface.mesh.getWorldPosition(origin);\r\n    const rightDirection = new Vector3().subVectors(surface.mesh.localToWorld(new Vector3(1, 0, 0)), origin);\r\n    const downDirection = new Vector3().subVectors(surface.mesh.localToWorld(new Vector3(0, -1, 0)), origin);\r\n    const outDirection = new Vector3();\r\n    surface.mesh.getWorldDirection(outDirection);\r\n\r\n    rightDirection.normalize();\r\n    downDirection.normalize();\r\n    outDirection.normalize();\r\n    const anchorOffset = offset(anchorRef.current);\r\n    anchorOffset.left += anchorRef.current.offsetWidth / 2;\r\n    anchorOffset.top += anchorRef.current.offsetHeight / 2;\r\n    anchorOffset.left *= surface.scaleFactor;\r\n    anchorOffset.top *= surface.scaleFactor;\r\n\r\n    const position = topLeft.clone();\r\n    position.addScaledVector(rightDirection, anchorOffset.left)\r\n      .addScaledVector(downDirection, anchorOffset.top)\r\n      .addScaledVector(outDirection, 10);\r\n\r\n    setAnchorData({\r\n      position,\r\n      rotation: surface.mesh.rotation.clone(),\r\n      up: surface.mesh.up.clone()\r\n    });\r\n  }, [surface, anchorRef]);\r\n\r\n  return anchorData;\r\n}\r\n\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Surface from './';\r\nimport SurfaceData from './SurfaceData';\r\nimport useGetAnchorData from './useGetAnchorData';\r\n\r\nfunction AnchoredSurface(props) {\r\n  const anchorRef = useRef(null);\r\n  const anchorData = useGetAnchorData(props.parent, anchorRef);\r\n\r\n  return (\r\n    <div\r\n      className=\"anchor\"\r\n      ref={anchorRef}\r\n      style={{\r\n        width: props.width / props.parent.scaleFactor,\r\n        height: props.height / props.parent.scaleFactor\r\n      }}\r\n    >\r\n      {anchorData &&\r\n        <Surface\r\n          position={anchorData.position}\r\n          rotation={anchorData.rotation}\r\n          up={anchorData.up}\r\n          {...props}\r\n        >\r\n          {props.children}\r\n        </Surface>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nAnchoredSurface.propTypes = {\r\n  width: PropTypes.number.isRequired,\r\n  height: PropTypes.number.isRequired,\r\n  parent: PropTypes.instanceOf(SurfaceData).isRequired,\r\n  children: PropTypes.element.isRequired\r\n}\r\n\r\nexport default AnchoredSurface;\r\n","import React, { useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst isCameraParent = (cameraView, parent) => {\r\n  if (parent === null) return false;\r\n  if (cameraView === parent) return true;\r\n  return isCameraParent(cameraView, parent.parent);\r\n};\r\n\r\nexport default function withSubSurface(Component) {\r\n  function SubSurface(props) {\r\n    // if surface has a parent and the camera is not on that parent, disable pointer events\r\n    useEffect(() => {\r\n      if (isCameraParent(props.cameraView, props.surface.parent)) {\r\n        props.surface.object.element.className = \"\";\r\n      } else {\r\n        props.surface.object.element.className = \"pointer-events-none\";\r\n      }\r\n    }, [props.cameraView, props.surface]);\r\n\r\n    // when going back to overview, ensure that the surface goes back to its original position.\r\n    useEffect(() => {\r\n      if (props.cameraView !== null) return;\r\n      props.surface.moveToOriginal();\r\n    }, [props.cameraView, props.surface]);\r\n\r\n    return (\r\n      <Fragment>\r\n        <div className=\"surface__content\">\r\n          <Component {...props} />\r\n        </div>\r\n        <div\r\n          className={`surface__overlay ${!isCameraParent(props.cameraView, props.surface.parent) ? 'surface__overlay--hidden' : ''}`}\r\n          onClick={() => props.surface.moveToggle()}\r\n        />\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  SubSurface.propTypes = {\r\n    cameraView: PropTypes.object,\r\n    setCameraView: PropTypes.func,\r\n    surface: PropTypes.object\r\n  };\r\n\r\n  return SubSurface;\r\n}\r\n","import React from 'react';\r\nimport withSubSurface from '../Surface/withSubSurface';\r\nimport './Pamphlet.css';\r\n\r\nfunction Pamphlet(props) {\r\n  return (\r\n    <div className=\"pamphlet\">\r\n      Hej\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withSubSurface(Pamphlet);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AnchoredSurface from '../Surface/AnchoredSurface.jsx';\r\nimport Pamphlet from './Pamphlet';\r\nimport withMainSurface from '../Surface/withMainSurface';\r\nimport { surfaceDeps } from '../render';\r\nimport './Board.css';\r\n\r\nfunction Board(props) {\r\n  return (\r\n    <div className=\"board\">\r\n      <div className=\"board__content\">\r\n        <AnchoredSurface width={100} height={150} parent={props.surface} scaleFactor={0.2} {...surfaceDeps}>\r\n          <Pamphlet cameraView={props.cameraView} setCameraView={props.setCameraView} />\r\n        </AnchoredSurface>\r\n        <AnchoredSurface width={100} height={150} parent={props.surface} scaleFactor={0.5} {...surfaceDeps}>\r\n          <Pamphlet cameraView={props.cameraView} setCameraView={props.setCameraView} />\r\n        </AnchoredSurface>\r\n        <AnchoredSurface width={100} height={150} parent={props.surface} scaleFactor={1} {...surfaceDeps}>\r\n          <Pamphlet cameraView={props.cameraView} setCameraView={props.setCameraView} />\r\n        </AnchoredSurface>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nBoard.propTypes = {\r\n  cameraView: PropTypes.object,\r\n  setCameraView: PropTypes.func,\r\n  surface: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withMainSurface(Board);\r\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { Vector3, Euler } from 'three-full';\nimport { Helmet } from 'react-helmet';\nimport Surface from './Surface';\nimport Test from './Test.jsx';\nimport Board from './Board';\nimport { scCamera, surfaceDeps } from './render';\nimport withMainSurface from './Surface/withMainSurface';\nimport './App.css';\n\nconst leftWallProps = {\n  width: 1000,\n  height: 1000, \n  position: new Vector3(500, 0, -500), \n  rotation: new Euler(0, -Math.PI / 2, 0), \n  up: new Vector3(0, 1, 0), \n  ...surfaceDeps\n};\nconst backWallProps = {\n  width: 1000, \n  height: 1000, \n  position: new Vector3(0, 0, 0), \n  rotation: new Euler(0, Math.PI, 0), \n  up: new Vector3(0, 1, 0), \n  ...surfaceDeps\n};\nconst rightWallProps = {\n  width: 1000, \n  height: 1000, \n  position: new Vector3(-500, 0, -500), \n  rotation: new Euler(0, Math.PI / 2, 0), \n  up: new Vector3(0, 1, 0), \n  ...surfaceDeps\n};\nconst floorProps = {\n  width: 1000, \n  height: 1000, \n  position: new Vector3(0, -500, -500), \n  rotation: new Euler(Math.PI / 2, Math.PI, 0), \n  up: new Vector3(0, 0, 1), \n  ...surfaceDeps\n};\n\nconst Embedded = withMainSurface(() => {\n  return (\n    <div class=\"embedded\">\n      <div id=\"customize-script-container\">\n      </div>\n      <Helmet>\n        <script type='text/javascript' src='https://darksky.net/widget/graph/59.8194,17.7822/si12/en.js?width=100%&height=500&title=Hammarby&textColor=333333&bgColor=FFFFFF&transparency=true&fontFamily=Default&customFont=&units=si&graph=temperature_graph&timeColor=333333&tempColor=333333&lineColor=333333&markerColor=333333'></script>\n      </Helmet>\n    </div>\n  );\n});\n\nfunction App(props) {\n  const [cameraView, setCameraView] = useState(null);\n \n  useEffect(() => {\n    scCamera.goToSurface(cameraView);\n  }, [cameraView]);\n\n  return (\n    <Fragment>\n      <Surface {...leftWallProps}>\n        <Embedded cameraView={cameraView} setCameraView={setCameraView} />\n      </Surface>\n      <Surface {...backWallProps}>\n        <Board cameraView={cameraView} setCameraView={setCameraView} />\n      </Surface>\n      <Surface {...rightWallProps}>\n        <Test cameraView={cameraView} setCameraView={setCameraView} />\n      </Surface>\n      <Surface {...floorProps}>\n        <Test cameraView={cameraView} setCameraView={setCameraView} />\n      </Surface>\n\n      <div className=\"app\">\n        <div className=\"app__content\" />\n        <div className=\"app__overlay\">\n          {cameraView !== null &&\n            <div className=\"app__back-to-overlay\" onClick={() => setCameraView(null)}>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"6 6 36 36\">\n                  <path d=\"M40 22h-24.34l11.17-11.17-2.83-2.83-16 16 16 16 2.83-2.83-11.17-11.17h24.34v-4z\"/>\n              </svg>\n              <div>\n                <span>Back to overview</span>\n              </div>\n            </div>\n          }\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './render';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}